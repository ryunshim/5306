---
title: "Go Fund Me Data Analysis"
author: "Matthew Roohan (mlr287), Aishwarya Gupta (ag2469), Ryun Shim, Helena Xiong"
format: html
editor: visual
---

## Data and packages

We start with loading the packages we'll use.

```{r}
#| label: load-packages

library(tidyverse)
library(dplyr)
library(ggplot2)
library(tidytext)
library(tm)
library(SnowballC)
library(wordcloud)
library(RColorBrewer)
library(syuzhet)
library(randomForest)
library(caTools)
library(maps)
library(scales)

```

```{r}
#| label: import-data

gfm_data <- read.csv("data/gfm_cleaned_data.csv")
```

## Data Analysis Components:

-   Fundraising Goals and Donor Engagement

    -   How do different initial fundraising goals impact the number of donations received and donor engagement on GoFundMe?"

    -   Do campaigns with higher initial fundraising goals tend to receive more donations, or do more modest goals attract greater donor engagement?

    -   To what extent do campaigns with personalized stories or unique appeals attract more donors and achieve higher fundraising goals compared to campaigns with generic messages?

-   Social Media Pattern & Geographical Pattern

    -   What is the correlation between social media engagement metrics (likes, shares, comments) and the amount of funds raised in GoFundMe campaigns?"

    -   Are there discernible geographic patterns in campaign success on GoFundMe? Do campaigns in specific regions or cities tend to achieve higher fundraising goals?

-   Time analysis:

    -   How does the length of the fundraising campaign impact its success? Are longer or shorter campaigns more effective in reaching their funding goals?'

## Time Analysis:

```{r}
#| label: time-analysis
#was the goal reached or not?
gfm_data$goal_reached <- ifelse(gfm_data$amount_raised >=gfm_data$goal, "Yes", "No")

#Creating time analysis dataset 
time_analysis <- select(gfm_data, category, position, amount_raised, goal, number_of_donators, campaign_length_days, goal_reached)

#clean dataset 
time_analysis <- time_analysis[complete.cases(time_analysis$campaign_length_days, time_analysis$goal_reached), ]

#graph analysis
time_analysis$goal_reached <- factor(time_analysis$goal_reached, levels = c("No", "Yes"))

# Create a boxplot to compare campaign lengths for goal reached and not reached campaigns
ggplot(time_analysis, aes(x = goal_reached, y = campaign_length_days, fill = goal_reached)) +
  geom_boxplot() +
  labs(x = "Goal Reached", y = "Campaign Length (Days)",
       title = "Impact of Campaign Length on Goal Achievement") +
  theme_minimal()
```

-   Both Yes and No Goal reached have very similar

```{r}
#| label: time-analysis
time_analysis$goal_reached <- factor(time_analysis$goal_reached, levels = c("No", "Yes"))

# Aggregate counts for each unique combination of "campaign_length_days" and "goal_reached"
aggregated_data <- aggregate(goal_reached ~ campaign_length_days, data = time_analysis, FUN = table)

# Rename the columns
colnames(aggregated_data) <- c("Campaign_Length_Days", "Counts")

# Split "Counts" column into separate columns for "No" and "Yes"
aggregated_data <- cbind(aggregated_data, as.data.frame(aggregated_data$Counts))

# Remove the original "Counts" column
aggregated_data <- subset(aggregated_data, select = -Counts)

# Rename the columns for "No" and "Yes"
colnames(aggregated_data)[2:3] <- c("No_Count", "Yes_Count")

aggregated_data$yes_probability <- aggregated_data$Yes_Count / (aggregated_data$No_Count + aggregated_data$Yes_Count)

# Print the new dataframe
print(aggregated_data)



# Assuming "aggregated_data" is your dataframe

# Define the ranges for each group of campaign lengths
breaks <- c(0, 7, 14, 21, 30, 60, 90, 120, 150, 180)

# Create a new column for the groups
aggregated_data$weeks <- cut(aggregated_data$Campaign_Length_Days, breaks = breaks, labels = FALSE)

# Aggregate data based on the groups
aggregated_month_data <- aggregate(cbind(No_Count, Yes_Count) ~ weeks, data = aggregated_data, FUN = sum)

aggregated_month_data[5, 1] <- 8
aggregated_month_data[6, 1] <- 12
aggregated_month_data[7, 1] <- 16
aggregated_month_data[8, 1] <- 20
aggregated_month_data[9, 1] <- 24
print(aggregated_month_data)

aggregated_month_data$yes_probability <- aggregated_month_data$Yes_Count / (aggregated_month_data$No_Count + aggregated_month_data$Yes_Count)



# Create a line plot
ggplot(aggregated_month_data, aes(x = weeks, y = yes_probability)) +
  geom_line() +
  scale_x_continuous(breaks = seq(min(aggregated_month_data$weeks), max(aggregated_month_data$weeks), by = 1)) +
  scale_y_continuous(breaks = seq(0, 1, by = 0.1), limits = c(0, 1)) +
  labs(x = "Weeks", y = "Goal Reached Probability",
       title = "Goal Reached Probability over Weeks")
```

## Social Media Analysis:

-   What is the correlation between social media engagement metrics (likes, shares, comments) and the amount of funds raised in GoFundMe campaigns?"

```{r}
#| label: social-media-analysis

#creating dataset 
sm_analysis_data <- select(gfm_data, amount_raised, goal, goal_reached, FB_shares, GFM_hearts)
```

-   Does the number of FB_shares or GFM_hearts impact the amount that is raised?

```{r}
#| label: social-media-analysis

#scatter plot for FB_shares vs. amount_raised 
ggplot(sm_analysis_data, aes(x = FB_shares, y = amount_raised)) +
  geom_point() +
  scale_y_continuous(labels = scales::dollar_format()) +
  scale_x_continuous(labels = scales::comma) +
  labs(x = "Facebook Share Amount", y = "Amount Raised", title = "FB Shares vs Amount Raised")

```

-   The previous graph is hard to interpret, therefore use of log transformation is appropriate:

```{r}
#| label: social-media-analysis
# Create the scatter plot with logarithmic transformations
ggplot(sm_analysis_data, aes(x = log(FB_shares + 1), y = log(amount_raised + 1))) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE, aes(group = 1)) +
  labs(x = "Log(FB Shares)", y = "Log(Amount Raised)", title = "FB Shares vs. Amount Raised with a Log Transformation Applied")
```

-   The graph above shows that there is a positive correlation between FB shares and the amount that is raised.

```{r}
#| label: social-media-analysis

#sm analysis with outliers removed 
sm_no_outliers <- subset(sm_analysis_data, GFM_hearts < 20000) 
#scatter plot for GFM_hearts vs. amount_raised 
ggplot(sm_no_outliers, aes(x = GFM_hearts, y = amount_raised)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE) +
  scale_y_continuous(labels = scales::dollar_format()) +
  scale_x_continuous(labels = scales::comma) +
  labs(x = "Go Fund Me Hearts Amount", y = "Amount Raised", title = "GFM Hearts Amount vs Amount Raised", caption = "Outliers Removed")

```

-   The graph shows that there is a positive correlation between the number of Go Fund Me hearts and the Amount that the campaign raises.

## Geographical Analysis:

-   Are there discernible geographic patterns in campaign success on GoFundMe? Do campaigns in specific regions or cities tend to achieve higher fundraising goals?

```{r}
#| label: geographical-analysis

geo_analysis_data <- select(gfm_data, location, latitude, longitude, amount_raised, goal, goal_reached, FB_shares, GFM_hearts)

geo_analysis_data <- geo_analysis_data[!is.na(geo_analysis_data$goal_reached) & geo_analysis_data$goal_reached != "", ]

geo_analysis_data <- geo_analysis_data |>
  filter(longitude >= -140 & latitude >= 20)

```

```{r}
#| label: geographical-analysis

ggplot() +
  geom_polygon(data = usa, aes(x = long, y = lat, group = group), fill = "lightgrey") +
  geom_point(data = geo_analysis_data, aes(x = longitude, y = latitude, size = amount_raised, color = goal_reached), alpha = 0.5) +
  scale_color_manual(values = c("Yes" = "green", "No" = "red"), name = "Goal Reached") +
  scale_size(name = "Amount Raised", labels = label_dollar()) +
  theme_minimal() +
  coord_fixed(1.3) +  # Adjusts the aspect ratio to keep the map looking like the USA
  labs(title = "USA Map with Points Colored and Sized by Goal Reached")
```

## Text Analysis:

-   Can the language used in the title and text of the campaign (such as sentiment, keywords, urgency) be linked to its success? Are there common themes or words in the most successful campaigns?

```{r}
text_analysis <- gfm_data |>
  select(title, text)

TextDoc <- VCorpus(VectorSource(gfm_data$text))

# Convert the text to lower case
TextDoc <- tm_map(TextDoc, content_transformer(tolower))
# Remove numbers
TextDoc <- tm_map(TextDoc, removeNumbers)
# Remove english common stopwords
TextDoc <- tm_map(TextDoc, removeWords, stopwords("english"))
TextDoc <- tm_map(TextDoc, removeWords, c("go fund me")) 
# Remove punctuations
TextDoc <- tm_map(TextDoc, removePunctuation)
# Eliminate extra white spaces
TextDoc <- tm_map(TextDoc, stripWhitespace)
# Text stemming - which reduces words to their root form
TextDoc <- tm_map(TextDoc, stemDocument)

# Build a term-document matrix
TextDoc_dtm <- TermDocumentMatrix(TextDoc)
dtm_m <- as.matrix(TextDoc_dtm)
# Sort by descearing value of frequency
dtm_v <- sort(rowSums(dtm_m),decreasing=TRUE)
dtm_d <- data.frame(word = names(dtm_v),freq=dtm_v)
# Display the top 5 most frequent words
head(dtm_d, 10)

barplot(dtm_d[1:10,]$freq, las = 2, names.arg = dtm_d[1:10,]$word,
        col ="lightgreen", main ="Top 10 most frequent words",
        ylab = "Word frequencies")
```

\

```{r}
set.seed(1234)
wordcloud(words = dtm_d$word, freq = dtm_d$freq, min.freq = 5,
          max.words=100, random.order=FALSE, rot.per=0.40, 
          colors=brewer.pal(8, "Dark2"))
```

```{r}


text_analysis <- gfm_data |>
  select(title, text, amount_raised, goal)

# Combine title and text columns for analysis
text_analysis$combined_text <- paste(text_analysis$title, text_analysis$text)

TextDoc <- VCorpus(VectorSource(text_analysis$combined_text))
TextDoc <- tm_map(TextDoc, content_transformer(tolower))
TextDoc <- tm_map(TextDoc, removeNumbers)
TextDoc <- tm_map(TextDoc, removeWords, stopwords("english"))
TextDoc <- tm_map(TextDoc, removePunctuation)
TextDoc <- tm_map(TextDoc, stripWhitespace)
TextDoc <- tm_map(TextDoc, stemDocument)

# Create binary success variable
text_analysis$success <- with(text_analysis, ifelse(amount_raised >= goal, 1, 0))

# Build a term-document matrix
TextDoc_dtm <- TermDocumentMatrix(TextDoc)
dtm_m <- as.matrix(TextDoc_dtm)

# Convert term-document matrix to a data frame for modeling
dtm_df <- as.data.frame(dtm_m)
dtm_df$success <- text_analysis$success

# Split the data into training and test sets
set.seed(123)
split <- sample.split(dtm_df$success, SplitRatio = 0.7)
train_data <- subset(dtm_df, split == TRUE)
test_data <- subset(dtm_df, split == FALSE)

# Train a Random Forest model
rf_model <- randomForest(success ~ ., data=train_data, ntree=100)

# Predict on the test set
prediction <- predict(rf_model, newdata=test_data)

# Evaluate model performance
confusionMatrix <- table(test_data$success, prediction)
confusionMatrix

# Find the most important features (words)
importance_df <- as.data.frame(importance(rf_model))
top_words <- row.names(importance_df[order(-importance_df$MeanDecreaseGini),])[1:10]

# Visualize top words
barplot(importance_df$MeanDecreaseGini[names(importance_df) %in% top_words], 
        las = 2, names.arg = top_words,
        col ="lightgreen", main ="Top 10 most important words",
        ylab = "Importance")

# Create a word cloud for the most successful campaigns
successful_text <- text_analysis$text[text_analysis$success == 1]
successful_corpus <- Corpus(VectorSource(successful_text))
successful_corpus <- tm_map(successful_corpus, content_transformer(tolower))
successful_corpus <- tm_map(successful_corpus, removeNumbers)
successful_corpus <- tm_map(successful_corpus, removeWords, stopwords("english"))
successful_corpus <- tm_map(successful_corpus, removePunctuation)
successful_corpus <- tm_map(successful_corpus, stripWhitespace)
successful_corpus <- tm_map(successful_corpus, stemDocument)
successful_dtm <- TermDocumentMatrix(successful_corpus)
successful_m <- as.matrix(successful_dtm)
successful_freq <- sort(rowSums(successful_m), decreasing = TRUE)
wordcloud(names(successful_freq), successful_freq, min.freq = 5,
          max.words=100, random.order=FALSE, rot.per=0.40, 
          colors=brewer.pal(8, "Dark2"))
```

-   

-   Can sentiment analysis of campaign descriptions provide insights into campaign success on GoFundMe? How do positive or negative sentiments affect donor engagement and fundraising outcomes?"

```{r}

```
