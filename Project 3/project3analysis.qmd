---
title: "Project 3 Analysis Anchoring"
author: "Matthew Roohan (mlr287), Aishwarya Gupta (ag2469), Ryun Shim, Helena Xiong"
format: html
editor: visual
---

## Data and packages

We start with loading the packages we'll use.

```{r}
#| label: load-packages
library(tidyverse)
library(dplyr)
library(ggplot2)
library(tidytext)
library(jsonlite)
```

```{r}
#| label: import-data

study_data_cleaned <- read.csv("data/study_data_cleaned.csv")
demographic_data_cleaned <- read.csv("data/demographic_prolific_data_cleaned.csv")

```

```{r}

# Merge the datasets based on the common column "custom_id_prolific"
merged_data <- merge(study_data_cleaned, demographic_data_cleaned, by = "Custom_id_prolific", all.x = TRUE)

# all.x = TRUE will keep all rows from study_data_cleaned even if there is no match in demographic_data_cleaned
# If you want to keep all rows from demographic_data_cleaned, use all.y = TRUE instead.

# View the merged dataset
head(merged_data)

```

```{r}

all_data <- read.csv("data/merged_data.csv")

```

```{r}
#create 2 datasets based on each question

q4_data <- all_data[!is.na(all_data$Q4) & is.na(all_data$Q4.1), ]

# Subset rows where Q4.1 has values and Q4 is NA
q4.1_data <- all_data[is.na(all_data$Q4) & !is.na(all_data$Q4.1), ]


# For Q4_data
q4_data <- mutate(q4_data, difference = Q4 - 119)

# For Q4.1_data
q4.1_data <- mutate(q4.1_data, difference = Q4.1 - 119)


```

```{r}
#Generating statistics 

# For Q4_data
mean_estimation_Q4_data <- mean(q4_data$Q4, na.rm = TRUE)
cat("Mean of estimation column for Q4_data:", mean_estimation_Q4_data, "\n")

mean_difference_Q4_data <- mean(q4_data$difference, na.rm = TRUE)
cat("Mean of difference column for Q4_data:", mean_difference_Q4_data, "\n")

# For Q4.1_data

mean_estimation_Q4.1_data <- mean(q4.1_data$Q4.1, na.rm = TRUE)
cat("Mean of estimation column for Q4_data:", mean_estimation_Q4.1_data, "\n")

mean_difference_Q4.1_data <- mean(q4.1_data$difference, na.rm = TRUE)
cat("Mean of difference column for Q4.1_data:", mean_difference_Q4.1_data, "\n")


# Calculate the sum for Q4_data
sum_Q4_data <- sum(q4_data$Q4, na.rm = TRUE)
cat("Sum of values for Q4 column in Q4_data:", sum_Q4_data, "\n")

# Calculate the sum for Q4.1_data
sum_Q4.1_data <- sum(q4.1_data$Q4.1, na.rm = TRUE)
cat("Sum of values for Q4.1 column in Q4.1_data:", sum_Q4.1_data, "\n")


```

```{r}
library(dplyr)

# Assuming your dataset is named merged_data

merged_data <- merged_data %>%
  filter(!is.na(Custom_id_prolific))

estimation_data <- merged_data %>%
  mutate(
    Estimation = coalesce(Q4, Q4.1),  # coalesce will pick the first non-NA value
    Source = case_when(
      !is.na(Q4) ~ "Q4",   # If Q4 is not NA, then Source is 'Q4'
      !is.na(Q4.1) ~ "Q4.1" # If Q4.1 is not NA, then Source is 'Q4.1'
    )
  )

# View the first few rows of the modified dataframe
head(estimation_data)


# Assuming your dataset is already in your environment and named merged_data
mean_estimations <- estimation_data %>%
  group_by(Source) %>%
  summarise(
    Mean_Estimation = mean(Estimation, na.rm = TRUE)  # Calculating mean and removing any NAs
  )

# View the results
print(mean_estimations)

```

Graphs of Data:

```{r}
# Base plot
p <- ggplot(estimation_data, aes(x = Source, y = Estimation, fill = Source)) +
  geom_boxplot(outlier.colour = "red", outlier.shape = 1) + # Color and shape for outliers
  labs(title = "Box Plot of Estimation by Source",
       x = "Source",
       y = "Estimation") +
  theme_minimal() +
  scale_fill_manual(labels = c("Q4: First Image Shown", "Q4.1: No Image Shown"), 
                    values = c("#FF9999", "#99CCFF"))  # Light red and light blue

# Add median labels
p <- p + stat_summary(fun = median, geom = "text", aes(label = round(after_stat(y), 2)),
                      position = position_dodge(width = 0.75), vjust = -0.5,
                      color = "black", size = 3.5)

# Add quartile labels using `geom_text` directly with a new calculation
# Calculate quartiles and other stats to annotate manually
boxplot_stats <- estimation_data %>%
  group_by(Source) %>%
  summarise(
    lower = quantile(Estimation, probs = 0.25, na.rm = TRUE),
    upper = quantile(Estimation, probs = 0.75, na.rm = TRUE)
  ) %>%
  tidyr::pivot_longer(-Source, names_to = "Quartile", values_to = "Value")

# Add quartile labels
p <- p + geom_text(data = boxplot_stats, aes(x = Source, y = Value, label = round(Value, 2)),
                   position = position_dodge(width = 0.75), 
                   vjust = ifelse(boxplot_stats$Quartile == "lower", 1.5, -0.5), # Move lower quartile up
                   hjust = -0.2, size = 3, check_overlap = TRUE)

# Print the plot with labels
print(p)


```

-   The graphs shows that the when an anchoring photo was shown, participants estimated on average 120 marbles compared to 105 when not shown the first image. Without seeing the first image, participants had a larger spread of estimations, which included more outliers.

```{r}
#create a better cleaned dataset for analysis 

analysis_data <- estimation_data |> 
  select(Custom_id_prolific, Q2, Duration..in.seconds., Q3, Q3_5_TEXT, Age, Sex, Estimation, Source)

```

Calculating the t-test statistics of the 2 estimation groups to see if there is a significance of the anchoring effect.

```{r}

with_picture_data <- filter(analysis_data, Source == "Q4") 
without_picture_data <- filter(analysis_data, Source == "Q4.1") 

mean_picture <- mean(with_picture_data$Estimation)
mean_without_picture <- mean(without_picture_data$Estimation)

cat("Mean estimate for the group shown the anchor (12 marbles):", mean_picture, "\n")
cat("Mean estimate for the group not shown the anchor:", mean_without_picture, "\n")

# Perform a t-test to compare the means of the two groups
t_test_result <- t.test(with_picture_data$Estimation, without_picture_data$Estimation)

# Print the t-test result
print(t_test_result)



```

Based on the results of the Welch Two Sample t-test:

1.  **Mean Estimates**: The mean estimate for the group shown the anchor (10 marbles) is 115.65, while the mean estimate for the group not shown the anchor is 106.6094.

2.  **T-test Result**: The t-test statistic is 1.3857 with a degrees of freedom (df) of approximately 97.138. The p-value associated with this test is 0.169.

3.  **Interpretation**: With a p-value of 0.169, which is greater than the conventional significance level of 0.05, we fail to reject the null hypothesis. This suggests that there is not enough evidence to conclude that the difference in means between the two groups is statistically significant at the 5% significance level.

4.  **Confidence Interval**: The 95% confidence interval for the difference in means ranges from -3.907618 to 21.988868. Since this interval contains zero, it further supports the conclusion that there is no statistically significant difference in estimates between the group shown the anchor and the group not shown the anchor.

In summary, based on these results, there does not appear to be a significant anchoring effect present in the data. Participants' estimates were not significantly influenced by whether or not they were shown the anchor of 12 marbles.

```{r}

# Create a box plot with the legend removed
ggplot(analysis_data, aes(x = Q3, y = Estimation, fill = Q3)) +
  geom_boxplot() +
  labs(x = "Race", y = "Estimation") +
  ggtitle("Estimation Segmented by Race") +
  facet_wrap(~ Source) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  guides(fill = FALSE)


```

There are no significant trends from this data. There were not enough datapoints per each race to gain a significant result. White people had the worst estimations while Black/African Americans had the best, but only had a few datapoints in the set.

```{r}
# Assuming your dataset is named analysis_data

# Define a lookup table for race
race_labels <- c("1" = "Asian", "2" = "Black or African American", "3" = "Other", "4" = "White")  # Adjust the labels as per your dataset


# Load necessary libraries
library(ggplot2)
library(tibble)

# Create the box plot
boxplot <- ggplot(analysis_data, aes(x = Q3, y = Estimation, fill = Q3)) +
  geom_boxplot() +
  labs(x = "Race", y = "Estimation") +
  ggtitle("Estimation Segmented by Race") +
  facet_wrap(~ Source) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# Extract the data used to create the plot
plot_data <- ggplot_build(boxplot)$data

# Filter the data for the boxplots
boxplot_data <- plot_data[[1]]

# Organize the data into a table
boxplot_table <- as_tibble(boxplot_data)
boxplot_table <- boxplot_table[, c("group", "x", "lower", "middle", "upper", "ymax", "ymin")]

# Rename the columns for clarity
colnames(boxplot_table) <- c("Source", "Race", "Lower Whisker", "Lower Hinge", "Median", "Upper Hinge", "Upper Whisker")


# Replace numeric race values with corresponding text labels
boxplot_table$Race <- race_labels[as.character(boxplot_table$Race)]

# Print the table
print(boxplot_table)


```

```{r}
# Assuming your dataset is named analysis_data

# Load necessary libraries
library(ggplot2)

# Create the box plot faceted by the "Source" column for the column "Q2" (age groups)
boxplot_age <- ggplot(analysis_data, aes(x = factor(Q2), y = Estimation, fill = factor(Q2))) +
  geom_boxplot() +
  labs(x = "Age Group", y = "Estimation") +
  ggtitle("Estimation Segmented by Age Group") +
  facet_wrap(~ Source) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# Print the box plot
print(boxplot_age)

```

Young people ages 18-24 when shown the first image had the worst estimations while those ages 35-39 and 40-44 were the closest when shown the first image. Ages 25-29 and 30-34 had the best estimations when they did not see the first image.

```{r}
scatterplot <- ggplot(analysis_data, aes(x = Duration..in.seconds., y = Estimation, color = Source)) +
  geom_point() +
  labs(x = "Duration (seconds)", y = "Estimation") +
  ggtitle("Estimation vs. Duration (Seconds) Segmented by Source")

# Print the scatter plot
print(scatterplot)
```

The time that it took participants to answer/estimate the number of marbles was roughly the same, whether or not they were shown the first image, indicating that those who saw the first image did not spend much time analyzing it.

```{r}
# Assuming your dataset is named analysis_data

# Load necessary libraries
library(ggplot2)

# Create a boxplot comparing duration in seconds for each source
boxplot_source_duration <- ggplot(analysis_data, aes(x = Source, y = Duration..in.seconds., fill = Source)) +
  geom_boxplot() +
  stat_summary(fun = median, geom = "text", aes(label = paste("Median:", round(..y.., 2))), vjust = -1, size = 3, color = "black") +
  labs(x = "Source", y = "Duration (Seconds)", fill = "Source") +
  ggtitle("Duration in Seconds Boxplot by Source")

# Print the boxplot
print(boxplot_source_duration)

```

-   When factoring in the time for the page to reload for Q4 to move to the estimation page (\~7 seconds, the duration between the two groups was not significantly different and participants were not helped on their estimations by seeing the first image.

All together, the first image did not help the participants, therefore the initial thought that it would cannot be proven/there may not be a strong anchoring effect at play in this research.
